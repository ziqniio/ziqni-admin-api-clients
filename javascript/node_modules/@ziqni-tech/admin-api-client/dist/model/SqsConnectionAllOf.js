"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The SqsConnectionAllOf model module.
 * @module model/SqsConnectionAllOf
 * @version 0.0.26
 */
var SqsConnectionAllOf = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>SqsConnectionAllOf</code>.
   * @alias module:model/SqsConnectionAllOf
   * @param name {String} The type of the consumer
   * @param uri {String} The SQS endpoint.
   * @param acessKey {String} The access key of the IAM user
   * @param lastKnownStatus {String} Last known status of the connection
   * @param lastKnownStatusCode {Number} Status code correspoding to the last known status
   * @param transformerId {String} The transformer to use, if empty the default system transformer will be used
   */
  function SqsConnectionAllOf(name, uri, acessKey, lastKnownStatus, lastKnownStatusCode, transformerId) {
    _classCallCheck(this, SqsConnectionAllOf);

    SqsConnectionAllOf.initialize(this, name, uri, acessKey, lastKnownStatus, lastKnownStatusCode, transformerId);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(SqsConnectionAllOf, null, [{
    key: "initialize",
    value: function initialize(obj, name, uri, acessKey, lastKnownStatus, lastKnownStatusCode, transformerId) {
      obj['name'] = name;
      obj['uri'] = uri;
      obj['acessKey'] = acessKey;
      obj['lastKnownStatus'] = lastKnownStatus;
      obj['lastKnownStatusCode'] = lastKnownStatusCode;
      obj['transformerId'] = transformerId;
    }
    /**
     * Constructs a <code>SqsConnectionAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SqsConnectionAllOf} obj Optional instance to populate.
     * @return {module:model/SqsConnectionAllOf} The populated <code>SqsConnectionAllOf</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new SqsConnectionAllOf();

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('uri')) {
          obj['uri'] = _ApiClient["default"].convertToType(data['uri'], 'String');
        }

        if (data.hasOwnProperty('acessKey')) {
          obj['acessKey'] = _ApiClient["default"].convertToType(data['acessKey'], 'String');
        }

        if (data.hasOwnProperty('lastKnownStatus')) {
          obj['lastKnownStatus'] = _ApiClient["default"].convertToType(data['lastKnownStatus'], 'String');
        }

        if (data.hasOwnProperty('lastKnownStatusCode')) {
          obj['lastKnownStatusCode'] = _ApiClient["default"].convertToType(data['lastKnownStatusCode'], 'Number');
        }

        if (data.hasOwnProperty('transformerId')) {
          obj['transformerId'] = _ApiClient["default"].convertToType(data['transformerId'], 'String');
        }

        if (data.hasOwnProperty('connectionType')) {
          obj['connectionType'] = _ApiClient["default"].convertToType(data['connectionType'], 'String');
        }
      }

      return obj;
    }
  }]);

  return SqsConnectionAllOf;
}();
/**
 * The type of the consumer
 * @member {String} name
 */


SqsConnectionAllOf.prototype['name'] = undefined;
/**
 * The description of the consumer
 * @member {String} description
 */

SqsConnectionAllOf.prototype['description'] = undefined;
/**
 * The SQS endpoint.
 * @member {String} uri
 */

SqsConnectionAllOf.prototype['uri'] = undefined;
/**
 * The access key of the IAM user
 * @member {String} acessKey
 */

SqsConnectionAllOf.prototype['acessKey'] = undefined;
/**
 * Last known status of the connection
 * @member {String} lastKnownStatus
 */

SqsConnectionAllOf.prototype['lastKnownStatus'] = undefined;
/**
 * Status code correspoding to the last known status
 * @member {Number} lastKnownStatusCode
 */

SqsConnectionAllOf.prototype['lastKnownStatusCode'] = undefined;
/**
 * The transformer to use, if empty the default system transformer will be used
 * @member {String} transformerId
 */

SqsConnectionAllOf.prototype['transformerId'] = undefined;
/**
 * The type of connection
 * @member {String} connectionType
 */

SqsConnectionAllOf.prototype['connectionType'] = undefined;
var _default = SqsConnectionAllOf;
exports["default"] = _default;