"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _ScheduleType = _interopRequireDefault(require("./ScheduleType"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The Scheduling model module.
 * @module model/Scheduling
 * @version 0.0.26
 */
var Scheduling = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Scheduling</code>.
   * @alias module:model/Scheduling
   * @param scheduleType {module:model/ScheduleType} 
   * @param scheduleOccurrencesLimit {Number} A value indicating how many times it will be issued
   * @param every {Array.<Number>} 
   * @param startDate {Date} The start date and time of a schedule. ISO8601 timestamp
   * @param constraints {Array.<String>} Additional constraints
   */
  function Scheduling(scheduleType, scheduleOccurrencesLimit, every, startDate, constraints) {
    _classCallCheck(this, Scheduling);

    Scheduling.initialize(this, scheduleType, scheduleOccurrencesLimit, every, startDate, constraints);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(Scheduling, null, [{
    key: "initialize",
    value: function initialize(obj, scheduleType, scheduleOccurrencesLimit, every, startDate, constraints) {
      obj['scheduleType'] = scheduleType;
      obj['scheduleOccurrencesLimit'] = scheduleOccurrencesLimit;
      obj['every'] = every;
      obj['startDate'] = startDate;
      obj['constraints'] = constraints;
    }
    /**
     * Constructs a <code>Scheduling</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Scheduling} obj Optional instance to populate.
     * @return {module:model/Scheduling} The populated <code>Scheduling</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Scheduling();

        if (data.hasOwnProperty('scheduleType')) {
          obj['scheduleType'] = _ScheduleType["default"].constructFromObject(data['scheduleType']);
        }

        if (data.hasOwnProperty('scheduleOccurrencesLimit')) {
          obj['scheduleOccurrencesLimit'] = _ApiClient["default"].convertToType(data['scheduleOccurrencesLimit'], 'Number');
        }

        if (data.hasOwnProperty('every')) {
          obj['every'] = _ApiClient["default"].convertToType(data['every'], ['Number']);
        }

        if (data.hasOwnProperty('startDate')) {
          obj['startDate'] = _ApiClient["default"].convertToType(data['startDate'], 'Date');
        }

        if (data.hasOwnProperty('endDate')) {
          obj['endDate'] = _ApiClient["default"].convertToType(data['endDate'], 'Date');
        }

        if (data.hasOwnProperty('constraints')) {
          obj['constraints'] = _ApiClient["default"].convertToType(data['constraints'], ['String']);
        }
      }

      return obj;
    }
  }]);

  return Scheduling;
}();
/**
 * @member {module:model/ScheduleType} scheduleType
 */


Scheduling.prototype['scheduleType'] = undefined;
/**
 * A value indicating how many times it will be issued
 * @member {Number} scheduleOccurrencesLimit
 */

Scheduling.prototype['scheduleOccurrencesLimit'] = undefined;
/**
 * @member {Array.<Number>} every
 */

Scheduling.prototype['every'] = undefined;
/**
 * The start date and time of a schedule. ISO8601 timestamp
 * @member {Date} startDate
 */

Scheduling.prototype['startDate'] = undefined;
/**
 * The end date and time of a schedule. ISO8601 timestamp
 * @member {Date} endDate
 */

Scheduling.prototype['endDate'] = undefined;
/**
 * Additional constraints
 * @member {Array.<String>} constraints
 */

Scheduling.prototype['constraints'] = undefined;
var _default = Scheduling;
exports["default"] = _default;