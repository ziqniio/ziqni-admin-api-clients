"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _ActionTypeAdjustmentFactor = _interopRequireDefault(require("./ActionTypeAdjustmentFactor"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The ProductAllOf model module.
 * @module model/ProductAllOf
 * @version 0.0.26
 */
var ProductAllOf = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>ProductAllOf</code>.
   * @alias module:model/ProductAllOf
   * @param name {String} The name of the product
   * @param adjustmentFactor {Number} The multiplier to apply to source values received for this product events
   * @param productRefId {String} The reference to this product in your system. The reference identifier can not be changed after the product has been created
   */
  function ProductAllOf(name, adjustmentFactor, productRefId) {
    _classCallCheck(this, ProductAllOf);

    ProductAllOf.initialize(this, name, adjustmentFactor, productRefId);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(ProductAllOf, null, [{
    key: "initialize",
    value: function initialize(obj, name, adjustmentFactor, productRefId) {
      obj['name'] = name;
      obj['adjustmentFactor'] = adjustmentFactor;
      obj['productRefId'] = productRefId;
    }
    /**
     * Constructs a <code>ProductAllOf</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductAllOf} obj Optional instance to populate.
     * @return {module:model/ProductAllOf} The populated <code>ProductAllOf</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new ProductAllOf();

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('adjustmentFactor')) {
          obj['adjustmentFactor'] = _ApiClient["default"].convertToType(data['adjustmentFactor'], 'Number');
        }

        if (data.hasOwnProperty('productRefId')) {
          obj['productRefId'] = _ApiClient["default"].convertToType(data['productRefId'], 'String');
        }

        if (data.hasOwnProperty('actionTypeAdjustmentFactors')) {
          obj['actionTypeAdjustmentFactors'] = _ApiClient["default"].convertToType(data['actionTypeAdjustmentFactors'], [_ActionTypeAdjustmentFactor["default"]]);
        }
      }

      return obj;
    }
  }]);

  return ProductAllOf;
}();
/**
 * The name of the product
 * @member {String} name
 */


ProductAllOf.prototype['name'] = undefined;
/**
 * The description of the product for your reference
 * @member {String} description
 */

ProductAllOf.prototype['description'] = undefined;
/**
 * The multiplier to apply to source values received for this product events
 * @member {Number} adjustmentFactor
 */

ProductAllOf.prototype['adjustmentFactor'] = undefined;
/**
 * The reference to this product in your system. The reference identifier can not be changed after the product has been created
 * @member {String} productRefId
 */

ProductAllOf.prototype['productRefId'] = undefined;
/**
 * @member {Array.<module:model/ActionTypeAdjustmentFactor>} actionTypeAdjustmentFactors
 */

ProductAllOf.prototype['actionTypeAdjustmentFactors'] = undefined;
var _default = ProductAllOf;
exports["default"] = _default;