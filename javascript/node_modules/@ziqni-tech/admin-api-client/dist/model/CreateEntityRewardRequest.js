"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _CreateEntityRewardRequestAllOf = _interopRequireDefault(require("./CreateEntityRewardRequestAllOf"));

var _CreateOptParamModels = _interopRequireDefault(require("./CreateOptParamModels"));

var _RewardEntityType = _interopRequireDefault(require("./RewardEntityType"));

var _Translation = _interopRequireDefault(require("./Translation"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The CreateEntityRewardRequest model module.
 * @module model/CreateEntityRewardRequest
 * @version 0.0.26
 */
var CreateEntityRewardRequest = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>CreateEntityRewardRequest</code>.
   * @alias module:model/CreateEntityRewardRequest
   * @implements module:model/CreateOptParamModels
   * @implements module:model/CreateEntityRewardRequestAllOf
   * @param entityType {module:model/RewardEntityType} 
   * @param entityId {String} A unique identifier of an achievement or contest. Dependant on entityType
   * @param name {String} The name of a reward
   * @param rewardRank {String} If used in the context of contest this will associate with the rank of the leaderboard
   * @param rewardValue {Number} Numerical value of the reward that will be issued based on the reward type
   * @param constraints {Array.<String>} Additional constraints
   * @param rewardTypeId {String} A unique id of the Reward Type
   */
  function CreateEntityRewardRequest(entityType, entityId, name, rewardRank, rewardValue, constraints, rewardTypeId) {
    _classCallCheck(this, CreateEntityRewardRequest);

    _CreateOptParamModels["default"].initialize(this);

    _CreateEntityRewardRequestAllOf["default"].initialize(this, entityType, entityId, name, rewardRank, rewardValue, constraints, rewardTypeId);

    CreateEntityRewardRequest.initialize(this, entityType, entityId, name, rewardRank, rewardValue, constraints, rewardTypeId);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(CreateEntityRewardRequest, null, [{
    key: "initialize",
    value: function initialize(obj, entityType, entityId, name, rewardRank, rewardValue, constraints, rewardTypeId) {
      obj['entityType'] = entityType;
      obj['entityId'] = entityId;
      obj['name'] = name;
      obj['rewardRank'] = rewardRank;
      obj['rewardValue'] = rewardValue;
      obj['constraints'] = constraints;
      obj['rewardTypeId'] = rewardTypeId;
    }
    /**
     * Constructs a <code>CreateEntityRewardRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateEntityRewardRequest} obj Optional instance to populate.
     * @return {module:model/CreateEntityRewardRequest} The populated <code>CreateEntityRewardRequest</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new CreateEntityRewardRequest();

        _CreateOptParamModels["default"].constructFromObject(data, obj);

        _CreateEntityRewardRequestAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('customFields')) {
          obj['customFields'] = _ApiClient["default"].convertToType(data['customFields'], {
            'String': Object
          });
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('metadata')) {
          obj['metadata'] = _ApiClient["default"].convertToType(data['metadata'], {
            'String': 'String'
          });
        }

        if (data.hasOwnProperty('entityType')) {
          obj['entityType'] = _RewardEntityType["default"].constructFromObject(data['entityType']);
        }

        if (data.hasOwnProperty('entityId')) {
          obj['entityId'] = _ApiClient["default"].convertToType(data['entityId'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('description')) {
          obj['description'] = _ApiClient["default"].convertToType(data['description'], 'String');
        }

        if (data.hasOwnProperty('rewardRank')) {
          obj['rewardRank'] = _ApiClient["default"].convertToType(data['rewardRank'], 'String');
        }

        if (data.hasOwnProperty('rewardValue')) {
          obj['rewardValue'] = _ApiClient["default"].convertToType(data['rewardValue'], 'Number');
        }

        if (data.hasOwnProperty('icon')) {
          obj['icon'] = _ApiClient["default"].convertToType(data['icon'], 'String');
        }

        if (data.hasOwnProperty('issueLimit')) {
          obj['issueLimit'] = _ApiClient["default"].convertToType(data['issueLimit'], 'Number');
        }

        if (data.hasOwnProperty('delay')) {
          obj['delay'] = _ApiClient["default"].convertToType(data['delay'], 'Number');
        }

        if (data.hasOwnProperty('pointInTime')) {
          obj['pointInTime'] = _ApiClient["default"].convertToType(data['pointInTime'], 'Date');
        }

        if (data.hasOwnProperty('period')) {
          obj['period'] = _ApiClient["default"].convertToType(data['period'], 'Number');
        }

        if (data.hasOwnProperty('translations')) {
          obj['translations'] = _ApiClient["default"].convertToType(data['translations'], [_Translation["default"]]);
        }

        if (data.hasOwnProperty('constraints')) {
          obj['constraints'] = _ApiClient["default"].convertToType(data['constraints'], ['String']);
        }

        if (data.hasOwnProperty('rewardTypeId')) {
          obj['rewardTypeId'] = _ApiClient["default"].convertToType(data['rewardTypeId'], 'String');
        }
      }

      return obj;
    }
  }]);

  return CreateEntityRewardRequest;
}();
/**
 * A list of custom field entries
 * @member {Object.<String, Object>} customFields
 */


CreateEntityRewardRequest.prototype['customFields'] = undefined;
/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */

CreateEntityRewardRequest.prototype['tags'] = undefined;
/**
 * @member {Object.<String, String>} metadata
 */

CreateEntityRewardRequest.prototype['metadata'] = undefined;
/**
 * @member {module:model/RewardEntityType} entityType
 */

CreateEntityRewardRequest.prototype['entityType'] = undefined;
/**
 * A unique identifier of an achievement or contest. Dependant on entityType
 * @member {String} entityId
 */

CreateEntityRewardRequest.prototype['entityId'] = undefined;
/**
 * The name of a reward
 * @member {String} name
 */

CreateEntityRewardRequest.prototype['name'] = undefined;
/**
 * The description of a Reward
 * @member {String} description
 */

CreateEntityRewardRequest.prototype['description'] = undefined;
/**
 * If used in the context of contest this will associate with the rank of the leaderboard
 * @member {String} rewardRank
 */

CreateEntityRewardRequest.prototype['rewardRank'] = undefined;
/**
 * Numerical value of the reward that will be issued based on the reward type
 * @member {Number} rewardValue
 */

CreateEntityRewardRequest.prototype['rewardValue'] = undefined;
/**
 * An Icon id that has been pre uploaded to the system to display for reward
 * @member {String} icon
 */

CreateEntityRewardRequest.prototype['icon'] = undefined;
/**
 * how many of thsese rewards are
 * @member {Number} issueLimit
 */

CreateEntityRewardRequest.prototype['issueLimit'] = undefined;
/**
 * Delay of issuing a reward in minutes
 * @member {Number} delay
 */

CreateEntityRewardRequest.prototype['delay'] = undefined;
/**
 * ISO8601 timestamp for when a Reward is available until a specific point in time. All records are stored in UTC time zone
 * @member {Date} pointInTime
 */

CreateEntityRewardRequest.prototype['pointInTime'] = undefined;
/**
 * Reward available for a period of time from issuing in minutes
 * @member {Number} period
 */

CreateEntityRewardRequest.prototype['period'] = undefined;
/**
 * @member {Array.<module:model/Translation>} translations
 */

CreateEntityRewardRequest.prototype['translations'] = undefined;
/**
 * Additional constraints
 * @member {Array.<String>} constraints
 */

CreateEntityRewardRequest.prototype['constraints'] = undefined;
/**
 * A unique id of the Reward Type
 * @member {String} rewardTypeId
 */

CreateEntityRewardRequest.prototype['rewardTypeId'] = undefined; // Implement CreateOptParamModels interface:

/**
 * A list of custom field entries
 * @member {Object.<String, Object>} customFields
 */

_CreateOptParamModels["default"].prototype['customFields'] = undefined;
/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */

_CreateOptParamModels["default"].prototype['tags'] = undefined;
/**
 * @member {Object.<String, String>} metadata
 */

_CreateOptParamModels["default"].prototype['metadata'] = undefined; // Implement CreateEntityRewardRequestAllOf interface:

/**
 * @member {module:model/RewardEntityType} entityType
 */

_CreateEntityRewardRequestAllOf["default"].prototype['entityType'] = undefined;
/**
 * A unique identifier of an achievement or contest. Dependant on entityType
 * @member {String} entityId
 */

_CreateEntityRewardRequestAllOf["default"].prototype['entityId'] = undefined;
/**
 * The name of a reward
 * @member {String} name
 */

_CreateEntityRewardRequestAllOf["default"].prototype['name'] = undefined;
/**
 * The description of a Reward
 * @member {String} description
 */

_CreateEntityRewardRequestAllOf["default"].prototype['description'] = undefined;
/**
 * If used in the context of contest this will associate with the rank of the leaderboard
 * @member {String} rewardRank
 */

_CreateEntityRewardRequestAllOf["default"].prototype['rewardRank'] = undefined;
/**
 * Numerical value of the reward that will be issued based on the reward type
 * @member {Number} rewardValue
 */

_CreateEntityRewardRequestAllOf["default"].prototype['rewardValue'] = undefined;
/**
 * An Icon id that has been pre uploaded to the system to display for reward
 * @member {String} icon
 */

_CreateEntityRewardRequestAllOf["default"].prototype['icon'] = undefined;
/**
 * how many of thsese rewards are
 * @member {Number} issueLimit
 */

_CreateEntityRewardRequestAllOf["default"].prototype['issueLimit'] = undefined;
/**
 * Delay of issuing a reward in minutes
 * @member {Number} delay
 */

_CreateEntityRewardRequestAllOf["default"].prototype['delay'] = undefined;
/**
 * ISO8601 timestamp for when a Reward is available until a specific point in time. All records are stored in UTC time zone
 * @member {Date} pointInTime
 */

_CreateEntityRewardRequestAllOf["default"].prototype['pointInTime'] = undefined;
/**
 * Reward available for a period of time from issuing in minutes
 * @member {Number} period
 */

_CreateEntityRewardRequestAllOf["default"].prototype['period'] = undefined;
/**
 * @member {Array.<module:model/Translation>} translations
 */

_CreateEntityRewardRequestAllOf["default"].prototype['translations'] = undefined;
/**
 * Additional constraints
 * @member {Array.<String>} constraints
 */

_CreateEntityRewardRequestAllOf["default"].prototype['constraints'] = undefined;
/**
 * A unique id of the Reward Type
 * @member {String} rewardTypeId
 */

_CreateEntityRewardRequestAllOf["default"].prototype['rewardTypeId'] = undefined;
var _default = CreateEntityRewardRequest;
exports["default"] = _default;