"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _UpdateFileObjectRequestAllOf = _interopRequireDefault(require("./UpdateFileObjectRequestAllOf"));

var _UpdateModelDefault = _interopRequireDefault(require("./UpdateModelDefault"));

var _UpdateOptParamModels = _interopRequireDefault(require("./UpdateOptParamModels"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The UpdateFileObjectRequest model module.
 * @module model/UpdateFileObjectRequest
 * @version 0.0.26
 */
var UpdateFileObjectRequest = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>UpdateFileObjectRequest</code>.
   * @alias module:model/UpdateFileObjectRequest
   * @implements module:model/UpdateModelDefault
   * @implements module:model/UpdateOptParamModels
   * @implements module:model/UpdateFileObjectRequestAllOf
   * @param id {String} A unique system generated identifier
   */
  function UpdateFileObjectRequest(id) {
    _classCallCheck(this, UpdateFileObjectRequest);

    _UpdateModelDefault["default"].initialize(this, id);

    _UpdateOptParamModels["default"].initialize(this);

    _UpdateFileObjectRequestAllOf["default"].initialize(this);

    UpdateFileObjectRequest.initialize(this, id);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(UpdateFileObjectRequest, null, [{
    key: "initialize",
    value: function initialize(obj, id) {
      obj['id'] = id;
    }
    /**
     * Constructs a <code>UpdateFileObjectRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateFileObjectRequest} obj Optional instance to populate.
     * @return {module:model/UpdateFileObjectRequest} The populated <code>UpdateFileObjectRequest</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new UpdateFileObjectRequest();

        _UpdateModelDefault["default"].constructFromObject(data, obj);

        _UpdateOptParamModels["default"].constructFromObject(data, obj);

        _UpdateFileObjectRequestAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'String');
        }

        if (data.hasOwnProperty('customFields')) {
          obj['customFields'] = _ApiClient["default"].convertToType(data['customFields'], {
            'String': Object
          });
        }

        if (data.hasOwnProperty('tags')) {
          obj['tags'] = _ApiClient["default"].convertToType(data['tags'], ['String']);
        }

        if (data.hasOwnProperty('metadata')) {
          obj['metadata'] = _ApiClient["default"].convertToType(data['metadata'], {
            'String': 'String'
          });
        }

        if (data.hasOwnProperty('repositoryId')) {
          obj['repositoryId'] = _ApiClient["default"].convertToType(data['repositoryId'], 'String');
        }

        if (data.hasOwnProperty('name')) {
          obj['name'] = _ApiClient["default"].convertToType(data['name'], 'String');
        }

        if (data.hasOwnProperty('mimeType')) {
          obj['mimeType'] = _ApiClient["default"].convertToType(data['mimeType'], 'String');
        }

        if (data.hasOwnProperty('parentFolderPath')) {
          obj['parentFolderPath'] = _ApiClient["default"].convertToType(data['parentFolderPath'], 'String');
        }

        if (data.hasOwnProperty('constraints')) {
          obj['constraints'] = _ApiClient["default"].convertToType(data['constraints'], ['String']);
        }
      }

      return obj;
    }
  }]);

  return UpdateFileObjectRequest;
}();
/**
 * A unique system generated identifier
 * @member {String} id
 */


UpdateFileObjectRequest.prototype['id'] = undefined;
/**
 * A list of id's used to add cutom fields
 * @member {Object.<String, Object>} customFields
 */

UpdateFileObjectRequest.prototype['customFields'] = undefined;
/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */

UpdateFileObjectRequest.prototype['tags'] = undefined;
/**
 * @member {Object.<String, String>} metadata
 */

UpdateFileObjectRequest.prototype['metadata'] = undefined;
/**
 * The repository identifier this file belongs too
 * @member {String} repositoryId
 */

UpdateFileObjectRequest.prototype['repositoryId'] = undefined;
/**
 * Name of the original file uploaded
 * @member {String} name
 */

UpdateFileObjectRequest.prototype['name'] = undefined;
/**
 * Mime type of the file. Valid mime types - text/csv or application/vmd.ms-excel
 * @member {String} mimeType
 */

UpdateFileObjectRequest.prototype['mimeType'] = undefined;
/**
 * The folder containing the attachment within the repository
 * @member {String} parentFolderPath
 */

UpdateFileObjectRequest.prototype['parentFolderPath'] = undefined;
/**
 * Additional constraints, if the value is present it means the
 * @member {Array.<String>} constraints
 */

UpdateFileObjectRequest.prototype['constraints'] = undefined; // Implement UpdateModelDefault interface:

/**
 * A unique system generated identifier
 * @member {String} id
 */

_UpdateModelDefault["default"].prototype['id'] = undefined; // Implement UpdateOptParamModels interface:

/**
 * A list of id's used to add cutom fields
 * @member {Object.<String, Object>} customFields
 */

_UpdateOptParamModels["default"].prototype['customFields'] = undefined;
/**
 * A list of id's used to tag models
 * @member {Array.<String>} tags
 */

_UpdateOptParamModels["default"].prototype['tags'] = undefined;
/**
 * @member {Object.<String, String>} metadata
 */

_UpdateOptParamModels["default"].prototype['metadata'] = undefined; // Implement UpdateFileObjectRequestAllOf interface:

/**
 * The repository identifier this file belongs too
 * @member {String} repositoryId
 */

_UpdateFileObjectRequestAllOf["default"].prototype['repositoryId'] = undefined;
/**
 * Name of the original file uploaded
 * @member {String} name
 */

_UpdateFileObjectRequestAllOf["default"].prototype['name'] = undefined;
/**
 * Mime type of the file. Valid mime types - text/csv or application/vmd.ms-excel
 * @member {String} mimeType
 */

_UpdateFileObjectRequestAllOf["default"].prototype['mimeType'] = undefined;
/**
 * The folder containing the attachment within the repository
 * @member {String} parentFolderPath
 */

_UpdateFileObjectRequestAllOf["default"].prototype['parentFolderPath'] = undefined;
/**
 * Additional constraints, if the value is present it means the
 * @member {Array.<String>} constraints
 */

_UpdateFileObjectRequestAllOf["default"].prototype['constraints'] = undefined;
var _default = UpdateFileObjectRequest;
exports["default"] = _default;