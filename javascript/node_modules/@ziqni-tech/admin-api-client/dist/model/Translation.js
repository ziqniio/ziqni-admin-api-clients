"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _TranslationEntry = _interopRequireDefault(require("./TranslationEntry"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The Translation model module.
 * @module model/Translation
 * @version 0.0.26
 */
var Translation = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>Translation</code>.
   * Translations to attach to the models.
   * @alias module:model/Translation
   * @param id {String} 
   * @param accountId {String} 
   * @param entityId {String} 
   * @param entityType {String} 
   * @param version {Number} 
   * @param created {Date} date-time
   * @param translations {Array.<module:model/TranslationEntry>} 
   * @param languageKey {String} 
   */
  function Translation(id, accountId, entityId, entityType, version, created, translations, languageKey) {
    _classCallCheck(this, Translation);

    Translation.initialize(this, id, accountId, entityId, entityType, version, created, translations, languageKey);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(Translation, null, [{
    key: "initialize",
    value: function initialize(obj, id, accountId, entityId, entityType, version, created, translations, languageKey) {
      obj['id'] = id;
      obj['accountId'] = accountId;
      obj['entityId'] = entityId;
      obj['entityType'] = entityType;
      obj['version'] = version;
      obj['created'] = created;
      obj['translations'] = translations;
      obj['languageKey'] = languageKey;
    }
    /**
     * Constructs a <code>Translation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Translation} obj Optional instance to populate.
     * @return {module:model/Translation} The populated <code>Translation</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new Translation();

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], 'String');
        }

        if (data.hasOwnProperty('accountId')) {
          obj['accountId'] = _ApiClient["default"].convertToType(data['accountId'], 'String');
        }

        if (data.hasOwnProperty('entityId')) {
          obj['entityId'] = _ApiClient["default"].convertToType(data['entityId'], 'String');
        }

        if (data.hasOwnProperty('entityType')) {
          obj['entityType'] = _ApiClient["default"].convertToType(data['entityType'], 'String');
        }

        if (data.hasOwnProperty('version')) {
          obj['version'] = _ApiClient["default"].convertToType(data['version'], 'Number');
        }

        if (data.hasOwnProperty('created')) {
          obj['created'] = _ApiClient["default"].convertToType(data['created'], 'Date');
        }

        if (data.hasOwnProperty('translations')) {
          obj['translations'] = _ApiClient["default"].convertToType(data['translations'], [_TranslationEntry["default"]]);
        }

        if (data.hasOwnProperty('languageKey')) {
          obj['languageKey'] = _ApiClient["default"].convertToType(data['languageKey'], 'String');
        }
      }

      return obj;
    }
  }]);

  return Translation;
}();
/**
 * @member {String} id
 */


Translation.prototype['id'] = undefined;
/**
 * @member {String} accountId
 */

Translation.prototype['accountId'] = undefined;
/**
 * @member {String} entityId
 */

Translation.prototype['entityId'] = undefined;
/**
 * @member {String} entityType
 */

Translation.prototype['entityType'] = undefined;
/**
 * @member {Number} version
 */

Translation.prototype['version'] = undefined;
/**
 * date-time
 * @member {Date} created
 */

Translation.prototype['created'] = undefined;
/**
 * @member {Array.<module:model/TranslationEntry>} translations
 */

Translation.prototype['translations'] = undefined;
/**
 * @member {String} languageKey
 */

Translation.prototype['languageKey'] = undefined;
var _default = Translation;
exports["default"] = _default;