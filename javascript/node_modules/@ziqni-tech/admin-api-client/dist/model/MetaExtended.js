"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

var _MetaExtendedAllOf = _interopRequireDefault(require("./MetaExtendedAllOf"));

var _MetaInfo = _interopRequireDefault(require("./MetaInfo"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The MetaExtended model module.
 * @module model/MetaExtended
 * @version 0.0.26
 */
var MetaExtended = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>MetaExtended</code>.
   * @alias module:model/MetaExtended
   * @implements module:model/MetaInfo
   * @implements module:model/MetaExtendedAllOf
   * @param objectType {String} 
   * @param resultCount {Number} The count of successful results
   * @param errorCount {Number} The count of errors
   * @param skip {Number} Number of records to skip
   * @param limit {Number} Number of records to return
   */
  function MetaExtended(objectType, resultCount, errorCount, skip, limit) {
    _classCallCheck(this, MetaExtended);

    _MetaInfo["default"].initialize(this, objectType, resultCount, errorCount);

    _MetaExtendedAllOf["default"].initialize(this, skip, limit);

    MetaExtended.initialize(this, objectType, resultCount, errorCount, skip, limit);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(MetaExtended, null, [{
    key: "initialize",
    value: function initialize(obj, objectType, resultCount, errorCount, skip, limit) {
      obj['objectType'] = objectType;
      obj['resultCount'] = resultCount;
      obj['errorCount'] = errorCount;
      obj['skip'] = skip;
      obj['limit'] = limit;
    }
    /**
     * Constructs a <code>MetaExtended</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MetaExtended} obj Optional instance to populate.
     * @return {module:model/MetaExtended} The populated <code>MetaExtended</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new MetaExtended();

        _MetaInfo["default"].constructFromObject(data, obj);

        _MetaExtendedAllOf["default"].constructFromObject(data, obj);

        if (data.hasOwnProperty('objectType')) {
          obj['objectType'] = _ApiClient["default"].convertToType(data['objectType'], 'String');
        }

        if (data.hasOwnProperty('totalRecords')) {
          obj['totalRecords'] = _ApiClient["default"].convertToType(data['totalRecords'], 'Number');
        }

        if (data.hasOwnProperty('resultCount')) {
          obj['resultCount'] = _ApiClient["default"].convertToType(data['resultCount'], 'Number');
        }

        if (data.hasOwnProperty('errorCount')) {
          obj['errorCount'] = _ApiClient["default"].convertToType(data['errorCount'], 'Number');
        }

        if (data.hasOwnProperty('skip')) {
          obj['skip'] = _ApiClient["default"].convertToType(data['skip'], 'Number');
        }

        if (data.hasOwnProperty('limit')) {
          obj['limit'] = _ApiClient["default"].convertToType(data['limit'], 'Number');
        }
      }

      return obj;
    }
  }]);

  return MetaExtended;
}();
/**
 * @member {String} objectType
 */


MetaExtended.prototype['objectType'] = undefined;
/**
 * The count of all results
 * @member {Number} totalRecords
 */

MetaExtended.prototype['totalRecords'] = undefined;
/**
 * The count of successful results
 * @member {Number} resultCount
 */

MetaExtended.prototype['resultCount'] = undefined;
/**
 * The count of errors
 * @member {Number} errorCount
 */

MetaExtended.prototype['errorCount'] = undefined;
/**
 * Number of records to skip
 * @member {Number} skip
 */

MetaExtended.prototype['skip'] = undefined;
/**
 * Number of records to return
 * @member {Number} limit
 */

MetaExtended.prototype['limit'] = undefined; // Implement MetaInfo interface:

/**
 * @member {String} objectType
 */

_MetaInfo["default"].prototype['objectType'] = undefined;
/**
 * The count of all results
 * @member {Number} totalRecords
 */

_MetaInfo["default"].prototype['totalRecords'] = undefined;
/**
 * The count of successful results
 * @member {Number} resultCount
 */

_MetaInfo["default"].prototype['resultCount'] = undefined;
/**
 * The count of errors
 * @member {Number} errorCount
 */

_MetaInfo["default"].prototype['errorCount'] = undefined; // Implement MetaExtendedAllOf interface:

/**
 * Number of records to skip
 * @member {Number} skip
 */

_MetaExtendedAllOf["default"].prototype['skip'] = undefined;
/**
 * Number of records to return
 * @member {Number} limit
 */

_MetaExtendedAllOf["default"].prototype['limit'] = undefined;
var _default = MetaExtended;
exports["default"] = _default;