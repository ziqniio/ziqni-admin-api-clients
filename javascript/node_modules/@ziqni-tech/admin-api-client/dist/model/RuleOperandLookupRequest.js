"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _ApiClient = _interopRequireDefault(require("../ApiClient"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * The RuleOperandLookupRequest model module.
 * @module model/RuleOperandLookupRequest
 * @version 0.0.26
 */
var RuleOperandLookupRequest = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>RuleOperandLookupRequest</code>.
   * @alias module:model/RuleOperandLookupRequest
   * @param context {String} The object context to search within
   */
  function RuleOperandLookupRequest(context) {
    _classCallCheck(this, RuleOperandLookupRequest);

    RuleOperandLookupRequest.initialize(this, context);
  }
  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */


  _createClass(RuleOperandLookupRequest, null, [{
    key: "initialize",
    value: function initialize(obj, context) {
      obj['context'] = context;
    }
    /**
     * Constructs a <code>RuleOperandLookupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RuleOperandLookupRequest} obj Optional instance to populate.
     * @return {module:model/RuleOperandLookupRequest} The populated <code>RuleOperandLookupRequest</code> instance.
     */

  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new RuleOperandLookupRequest();

        if (data.hasOwnProperty('context')) {
          obj['context'] = _ApiClient["default"].convertToType(data['context'], 'String');
        }

        if (data.hasOwnProperty('searchText')) {
          obj['searchText'] = _ApiClient["default"].convertToType(data['searchText'], 'String');
        }

        if (data.hasOwnProperty('id')) {
          obj['id'] = _ApiClient["default"].convertToType(data['id'], ['String']);
        }

        if (data.hasOwnProperty('skip')) {
          obj['skip'] = _ApiClient["default"].convertToType(data['skip'], 'Number');
        }

        if (data.hasOwnProperty('limit')) {
          obj['limit'] = _ApiClient["default"].convertToType(data['limit'], 'Number');
        }

        if (data.hasOwnProperty('constraints')) {
          obj['constraints'] = _ApiClient["default"].convertToType(data['constraints'], ['String']);
        }
      }

      return obj;
    }
  }]);

  return RuleOperandLookupRequest;
}();
/**
 * The object context to search within
 * @member {String} context
 */


RuleOperandLookupRequest.prototype['context'] = undefined;
/**
 * The text to search, at least 3 characters are required.
 * @member {String} searchText
 */

RuleOperandLookupRequest.prototype['searchText'] = undefined;
/**
 * The identifier to retrieve, if this is set search text will be ignored
 * @member {Array.<String>} id
 */

RuleOperandLookupRequest.prototype['id'] = undefined;
/**
 * How many response objects will be skipped for preview. Deafault is zero [0]
 * @member {Number} skip
 */

RuleOperandLookupRequest.prototype['skip'] = undefined;
/**
 * How many response objects will be returned. Deafult is zero [0] and the maximum is fifty [50]
 * @member {Number} limit
 */

RuleOperandLookupRequest.prototype['limit'] = undefined;
/**
 * Additional constraints
 * @member {Array.<String>} constraints
 */

RuleOperandLookupRequest.prototype['constraints'] = undefined;
var _default = RuleOperandLookupRequest;
exports["default"] = _default;